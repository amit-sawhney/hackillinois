{"ast":null,"code":"var _jsxFileName = \"/Users/nrking0/Code/hackillinois/src/Components/FindMentor/FindMentor.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core';\nimport mentoring from '../../images/mentoring.jpg';\nimport './FindMentor.css';\nconst useStyles = makeStyles({\n  search: {\n    width: '70%',\n    margin: 'auto',\n    backgroundColor: 'white'\n  },\n  root: {\n    paddingTop: '20vh',\n    width: '70%',\n    margin: 'auto'\n  } //   background: {\n  //     // backgroundImage: `url(${mentoring})`,\n  //     // height: '85vh',\n  //     // backgroundPosition: 'center',\n  //     // backgroundSize: 'cover',\n  //     // backgroundRepeat: 'no-repeat',\n  //     // paddingBottom: 0,\n  //     // marginBottom: 0,\n  // }\n\n});\n\nconst Mentor = props => {\n  const classes = useStyles();\n  const searchOptions = [{\n    name: \"Algebra 1\"\n  }, {\n    name: \"Algebra 2\"\n  }, {\n    name: \"Pre-Calculus\"\n  }, {\n    name: \"Calculus I\"\n  }, {\n    name: \"Calculus II\"\n  }, {\n    name: \"Calculus III/Multivariable Calculus\"\n  }, {\n    name: \"Linear Algebra\"\n  }, {\n    name: \"Differential Equations\"\n  }, {\n    name: \"Discrete Mathematics\"\n  }, {\n    name: \"General Chemistry\"\n  }, {\n    name: \"Organic Chemistry\"\n  }, {\n    name: \"Analytical Chemistry\"\n  }, {\n    name: \"Physical Chemistry\"\n  }, {\n    name: \"Chem Lab Advise\"\n  }, {\n    name: \"Java\"\n  }, {\n    name: \"Python\"\n  }, {\n    name: \"C/C++/C#\"\n  }, {\n    name: \"Javascript/jQuery\"\n  }, {\n    name: \"Web Development\"\n  }, {\n    name: \"Backend Development\"\n  }, {\n    name: \"Algorithms\"\n  }, {\n    name: \"Data Structures\"\n  }, {\n    name: \"Interview Prep\"\n  }, {\n    name: \"General Biology\"\n  }, {\n    name: \"Cellular Biology\"\n  }, {\n    name: \"Anatomical Sciences\"\n  }, {\n    name: \"Ecology\"\n  }, {\n    name: \"Evolutionary Biology\"\n  }, {\n    name: \"Molecular Biology\"\n  }, {\n    name: \"Genetics\"\n  }, {\n    name: \"Biochemistry\"\n  }, {\n    name: \"Bio Physics\"\n  }, {\n    name: \"Writing advise\"\n  }, {\n    name: \"Shakespeare\"\n  }, {\n    name: \"Poetry\"\n  }, {\n    name: \"Nonfiction\"\n  }, {\n    name: \"Fiction\"\n  }, {\n    name: \"Novel\"\n  }, {\n    name: \"Drama\"\n  }, {\n    name: \"Spanish\"\n  }, {\n    name: \"French\"\n  }, {\n    name: \"German\"\n  }, {\n    name: \"Japanese\"\n  }, {\n    name: \"Mandarin Chinese\"\n  }, {\n    name: \"Hindi\"\n  }, {\n    name: \"English\"\n  }];\n  const [mentors, setMentors] = useState([]);\n\n  const getMentors = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/mentors\");\n      const jsonData = await response.json();\n      console.log(jsonData);\n      setMentors(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getMentors();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    options: searchOptions,\n    getOptionLabel: option => option.name,\n    className: classes.search,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"filled\",\n      label: \"Find your mentor...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Firstname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Lastname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Email\")), mentors.map(mentor => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, mentor.fname), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, mentor.lname))))));\n};\n\nexport default Mentor;","map":{"version":3,"sources":["/Users/nrking0/Code/hackillinois/src/Components/FindMentor/FindMentor.js"],"names":["React","useState","makeStyles","Autocomplete","TextField","mentoring","useStyles","search","width","margin","backgroundColor","root","paddingTop","Mentor","props","classes","searchOptions","name","mentors","setMentors","getMentors","response","fetch","jsonData","json","console","log","err","error","message","useEffect","option","params","map","mentor","fname","lname"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core'\nimport mentoring from '../../images/mentoring.jpg'\nimport './FindMentor.css';\n\nconst useStyles = makeStyles({\n  search: {\n    width: '70%',\n    margin: 'auto',\n    backgroundColor: 'white'\n  },\n  root: {\n    paddingTop: '20vh',\n    width: '70%',\n    margin: 'auto',\n\n\n  },\n  //   background: {\n  //     // backgroundImage: `url(${mentoring})`,\n  //     // height: '85vh',\n  //     // backgroundPosition: 'center',\n  //     // backgroundSize: 'cover',\n  //     // backgroundRepeat: 'no-repeat',\n  //     // paddingBottom: 0,\n  //     // marginBottom: 0,\n  // }\n});\n\nconst Mentor = (props) => {\n  const classes = useStyles();\n\n  const searchOptions = [\n      { name: \"Algebra 1\" },\n      { name: \"Algebra 2\" },\n      { name: \"Pre-Calculus\" },\n      { name: \"Calculus I\" },\n      { name: \"Calculus II\" },\n      { name: \"Calculus III/Multivariable Calculus\" },\n      { name: \"Linear Algebra\" },\n      { name: \"Differential Equations\" },\n      { name: \"Discrete Mathematics\" },\n      { name: \"General Chemistry\" },\n      { name: \"Organic Chemistry\" },\n      { name: \"Analytical Chemistry\" },\n      { name: \"Physical Chemistry\" },\n      { name: \"Chem Lab Advise\" },\n      { name: \"Java\" },\n      { name: \"Python\" },\n      { name: \"C/C++/C#\" },\n      { name: \"Javascript/jQuery\" },\n      { name: \"Web Development\" },\n      { name: \"Backend Development\" },\n      { name: \"Algorithms\" },\n      { name: \"Data Structures\" },\n      { name: \"Interview Prep\" },\n      { name: \"General Biology\" },\n      { name: \"Cellular Biology\" },\n      { name: \"Anatomical Sciences\" },\n      { name: \"Ecology\" },\n      { name: \"Evolutionary Biology\" },\n      { name: \"Molecular Biology\" },\n      { name: \"Genetics\" },\n      { name: \"Biochemistry\" },\n      { name: \"Bio Physics\" },\n      { name: \"Writing advise\" },\n      { name: \"Shakespeare\" },\n      { name: \"Poetry\" },\n      { name: \"Nonfiction\" },\n      { name: \"Fiction\" },\n      { name: \"Novel\" },\n      { name: \"Drama\" },\n      { name: \"Spanish\" },\n      { name: \"French\" },\n      { name: \"German\" },\n      { name: \"Japanese\" },\n      { name: \"Mandarin Chinese\" },\n      { name: \"Hindi\" },\n      { name: \"English\" }\n    ]\n\n\n    const [mentors, setMentors] = useState([]);\n\n  const getMentors = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/mentors\");\n      const jsonData = await response.json();\n      console.log(jsonData);\n      setMentors(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    getMentors();\n  }, []);\n\n\n  return (\n    <div className=\"background\">\n      <div className={classes.root}>\n        <Autocomplete\n          multiple\n          options={searchOptions}\n          getOptionLabel={(option) => option.name}\n          className={classes.search}\n          renderInput={(params) => (\n\n            <TextField\n              {...params}\n              variant=\"filled\"\n              label=\"Find your mentor...\"\n            />\n\n          )}\n        />\n\n\n\n    <table>\n        <tr>\n          <th>Firstname</th>\n          <th>Lastname</th>\n          <th>Email</th>\n        </tr>\n        {mentors.map(mentor =>(\n          <tr>\n            <td>\n              {mentor.fname}\n            </td>\n            <td>\n              {mentor.lname}\n            </td>\n          </tr>\n        ))}\n      </table>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default Mentor;\n"]},"metadata":{},"sourceType":"module"}